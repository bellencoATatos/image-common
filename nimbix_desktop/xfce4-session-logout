#!/usr/bin/env python3

import os
import gi  # python36-gobject
gi.require_version("Gtk", "3.0")
from gi.repository import Gtk


def do_shutdown(self):
    os.system('/usr/bin/sudo kill -s TERM 1')


class DialogExample(Gtk.Dialog):
    def __init__(self, parent):
        super().__init__(title="Button Dialog", transient_for=parent, flags=0)
        self.add_buttons(
            Gtk.STOCK_CANCEL, Gtk.ResponseType.CANCEL, Gtk.STOCK_OK, Gtk.ResponseType.OK
        )

        self.set_default_size(150, 100)

        label = Gtk.Label(label="This is a dialog to display additional information")

        box = self.get_content_area()
        box.add(label)
        self.show_all()


class DialogWindow(Gtk.Window):
    def __init__(self):
        Gtk.Window.__init__(self, title="Top Dialog")

        self.set_border_width(6)

        button = Gtk.Button(label="Open buttons")
        button.connect("clicked", self.on_button_clicked)

        self.add(button)

    def on_button_clicked(self, widget):
        dialog = DialogExample(self)
        response = dialog.run()

        if response == Gtk.ResponseType.OK:
            do_shutdown(self)
            print("The OK button was clicked, called do_shutdown")
        elif response == Gtk.ResponseType.CANCEL:
            print("The Cancel button was clicked")

        dialog.destroy()


win = DialogWindow()
win.connect("destroy", Gtk.main_quit)
win.show_all()
Gtk.main()
